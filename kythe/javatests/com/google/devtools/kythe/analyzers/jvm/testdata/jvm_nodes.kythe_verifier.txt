//- ClassJvm=vname("pkg.Jvm", "", "", "", "jvm").node/kind record
//- ClassJvm.subkind class

//- ConstructorJvm=vname("pkg.Jvm.<init>()V", "", "", "", "jvm").node/kind function
//- ConstructorJvm.subkind constructor

//- IntFieldJvm=vname("pkg.Jvm.intField", "", "", "", "jvm").node/kind variable
//- IntFIeldJvm.subkind field

//- InnerJvm=vname("pkg.Jvm.Inner", "", "", "", "jvm").node/kind record
//- InnerJvm.subkind class

//- FuncJvm=vname("pkg.Jvm.func(ILjava/lang/Object;)V", "", "", "", "jvm").node/kind function
//- Param0Jvm=vname("pkg.Jvm.func(ILjava/lang/Object;)V.param0", "", "", "", "jvm").node/kind variable
//- Param1Jvm=vname("pkg.Jvm.func(ILjava/lang/Object;)V.param1", "", "", "", "jvm").node/kind variable
//- Param0Jvm.subkind local/parameter
//- Param1Jvm.subkind local/parameter

//- GenericJvm=vname("pkg.Jvm.Generic", "", "", "", "jvm").node/kind record
//- TFieldJvm=vname("pkg.Jvm.Generic.tfield", "", "", "", "jvm").node/kind variable
//- TMethodJvm=vname("pkg.Jvm.Generic.tmethod(Ljava/lang/Object;)V", "", "", "", "jvm").node/kind function

//- NopeJvm=vname("pkg.Jvm.nope()Ljava/lang/Object;", "", "", "", "jvm").node/kind function

//- GJvm=vname("pkg.Jvm.g([IZBCDFIJS)V", "", "", "", "jvm").node/kind function

//- VarArgsParamJvm=vname("pkg.Jvm.varargs([I)V.param0", "", "", "", "jvm").node/kind variable
//- VarArgsParamJvm.subkind local/parameter

Marked Source tests:

//- ClassJvm code ClassMS
//- ClassMS.kind "BOX"
//- ClassMS child.0 ClassCtx
//- ClassCtx.kind "CONTEXT"
//- ClassCtx.post_child_text "."
//- ClassCtx.add_final_list_token "true"
//- ClassCtx child.0 PkgId
//- PkgId.kind "IDENTIFIER"
//- PkgId.pre_text "pkg"
//- ClassMS child.1 ClassId
//- ClassId.kind "IDENTIFIER"
//- ClassId.pre_text "Jvm"
