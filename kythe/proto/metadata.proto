/*
 * Copyright 2019 The Kythe Authors. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
syntax = "proto3";

package kythe.proto.metadata;

import "kythe/proto/storage.proto";

// Schema for the JSON-encoded Kythe metadata describing the relationship
// between source and target code for generated code.
message GeneratedCodeInfo {
  enum Type {
    NONE = 0;
    KYTHE0 = 1;  // Initial metadata document type.
  }

  Type type = 1;
  repeated MappingRule meta = 2;  // Only relevant if type == kythe0.
}

// Metadata for a single mapping between a generated source range and a node
// in the source language.
message MappingRule {
  enum Type {
    NONE = 0;
    NOP = 1;             // Dummy rule that contains no relevant information.
    ANCHOR_DEFINES = 2;  // Rule describing a generates edge between target
                         // range and source definition.
    ANCHOR_ANCHOR = 3;   // Rule describing an imputes edge between target range
                         // and source range.
  }

  Type type = 1;
  // If type == anchor_defines, this should generally be a reverse generates
  // edge, %/kythe/edge/generates, indicating that the specified vname generated
  // the source range.
  // If type == anchor_anchor, this should generally be a forward imputes edge,
  // /kythe/edge/imputes, indicating that the range in the source file produced
  // the text in the target file.
  string edge = 2;

  // Fields only relevant if type == anchor_defines.
  kythe.proto.VName vname = 3;  // The semantic node in the source language
                                // which generated the text range.
  uint32 begin = 4;  // Beginning of the range to match in the generated text.
  uint32 end = 5;    // End of the range to match in the generated text.

  // Fields only relevant if type == anchor_anchor.
  kythe.proto.VName source_vname =
      6;  // Anchor node in the source language which generated the text range.
  uint32 source_begin =
      7;  // Beginning of the anchor node in the source language.
  uint32 source_end = 8;  // End of the anchor node in the source language.
  uint32 target_begin =
      9;  // Beginning of the range to match in the generated text.
  uint32 target_end = 10;  // End of the range to match in the generated text.
}
